@model List<AppLucas.Models.Producto>

    <style>
    .producto-img {
        width: 100%; /* ocupa todo el ancho del contenedor */
        height: 300px; /* altura fija */
        object-fit: cover; /* recorta proporcionalmente */
        border-radius: 0.25rem; /* borde redondeado */
        box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,.075); /* sombra ligera */
    }

    /* Ajuste para pantallas pequeñas */
    @@media (max-width: 768px) {
        .producto-img

    {
        height: 180px; /* altura menor en móviles */
    }

    }

    /* Modal de productos */
    .modal-producto-img {
        width: 100%;
        max-height: 250px; /* un poco más grande que en las tarjetas */
        object-fit: cover;
        border-radius: 0.25rem;
    }

    /* Opcional: responsive para modal */
    @@media (max-width: 768px) {
        .modal-producto-img

    {
        max-height: 200px;
    }

    }

    .modal-producto-img {
        width: 100%;
        max-height: 200px;
        object-fit: cover;
        border-radius: 0.25rem;
    }

  

    </style>

    <style>
    .menu-bar {
        position: fixed;
        top: 56px; /* Altura debajo del navbar principal */
        left: 0;
        width: 100%;
        background: #fff;
        z-index: 1050; /* Más alto que el contenido */
        transition: top 0.3s;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .menu-bar .menu-item {
        text-decoration: none;
        color: #333;
        font-weight: 500;
        font-size: 1rem;
        transition: color 0.3s, border-bottom 0.3s;
        border-bottom: 2px solid transparent;
    }

    .menu-bar .menu-item:hover {
        color: #0d6efd;
        border-bottom: 2px solid #0d6efd;
    }
</style>

<div class="menu-bar">
    <div class="d-flex justify-content-center overflow-auto py-2" style="white-space: nowrap;">
        <a href="#todos" class="menu-item me-4">Todos</a>
        <a href="#sushi" class="menu-item me-4">Sushi</a>
        <a href="#rolls" class="menu-item me-4">Rolls</a>
        <a href="#bebidas" class="menu-item me-4">Bebidas</a>
        <a href="#postres" class="menu-item me-4">Postres</a>
        <a href="#ofertas" class="menu-item me-4">Ofertas</a>
    </div>
</div>

<br />
<br />
<h2 class="text-center mb-4" id="sushi">Sushi</h2>
<hr />

<div class="row" id="listaProductos">
    @foreach (var p in Model.Where(p => p.Categoria == "Sushi"))
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <img src="@p.UrlImagen" class="card-img-top producto-img" alt="@p.Nombre" />
                <div class="card-body text-center">
                    <h5 class="card-title">@p.Nombre</h5>
                    <p class="card-text">
                        @if (p.Descuento > 0)
                        {
                            <strong>Precio:</strong>
                            <span class="text-decoration-line-through text-muted">$@p.Precio</span>
                            <br />
                            <span class="fw-bold">$@(p.Precio - (p.Precio * p.Descuento / 100))</span>
                            <span class="badge bg-danger ms-2">-@p.Descuento%</span>
                        }
                        else
                        {
                            <strong>Precio:</strong>
                            @p.Precio
                                        }
                    </p>

                    @if (p.Disponible)
                    {
                        <button class="btn btn-primary"
                                onclick="abrirModal('@p.Nombre', @p.Precio, '@p.UrlImagen', @p.Descuento)">
                            Añadir
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-secondary" disabled>No disponible</button>
                    }
                </div>
            </div>
        </div>
    }
</div>

<h2 class="text-center mb-4" id="bebidas">Bebidas</h2>

<div class="row" id="listaProductos">
    @foreach (var p in Model.Where(p => p.Categoria == "Bebidas"))
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <img src="@p.UrlImagen" class="card-img-top producto-img" alt="@p.Nombre" />
                <div class="card-body text-center">
                    <h5 class="card-title">@p.Nombre</h5>
                    <p class="card-text">
                        @if (p.Descuento > 0)
                        {
                            <strong>Precio:</strong>
                            <span class="text-decoration-line-through text-muted">$@p.Precio</span>
                            <br />
                            <span class="fw-bold">$@(p.Precio - (p.Precio * p.Descuento / 100))</span>
                            <span class="badge bg-danger ms-2">-@p.Descuento%</span>
                        }
                        else
                        {
                            <strong>Precio:</strong>
                            @p.Precio
                        }
                    </p>

                    @if (p.Disponible)
                    {
                        <button class="btn btn-primary"
                                onclick="abrirModal('@p.Nombre', @p.Precio, '@p.UrlImagen', @p.Descuento)">
                            Añadir
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-secondary" disabled>No disponible</button>
                    }
                </div>
            </div>
        </div>
    }
</div>

@* <!-- 🛒 Modal para ingresar cantidad -->
<div class="modal fade" id="modalCantidad" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Agregar al carrito</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body text-center">
                <img id="imagenProducto" src="" alt="Producto" class="img-fluid rounded mb-3 shadow-sm producto-img" style="max-height:200px;max-width:300px" />
                <h5 id="nombreProducto" class="fw-bold"></h5>
                <p>Precio unitario: $<span id="precioProducto"></span></p>
                <div class="input-group mb-3 w-75 mx-auto">
                    <span class="input-group-text">Cantidad</span>
                    <input type="number" id="cantidadProducto" class="form-control" value="1" min="1" onchange="actualizarTotal()">
                </div>
                <p class="fw-bold">Total: $<span id="totalProducto">0</span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-success" onclick="agregarAlCarrito()">Agregar</button>
            </div>
        </div>
    </div>
</div> *@

<!-- 🛒 Modal para ingresar cantidad -->
<div class="modal fade" id="modalCantidad" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Agregar al carrito</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body text-center">
                <img id="imagenProducto" src="" alt="Producto"
                     class="img-fluid rounded mb-3 shadow-sm producto-img"
                     style="max-height:200px;max-width:300px" />
                <h5 id="nombreProducto" class="fw-bold"></h5>
                <p>Precio unitario: $<span id="precioProducto"></span></p>

                <!-- Cantidad con botones + y - -->
                <div class="input-group mb-3 w-75 mx-auto justify-content-center">
                    <button class="btn btn-outline-secondary" type="button" onclick="cambiarCantidad(-1)">−</button>
                    <input type="number" id="cantidadProducto"
                           class="form-control text-center"
                           value="1" min="1" onchange="actualizarTotal()" style="max-width:80px;">
                    <button class="btn btn-outline-secondary" type="button" onclick="cambiarCantidad(1)">+</button>
                </div>

                <p class="fw-bold">Total: $<span id="totalProducto">0</span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-success" onclick="agregarAlCarrito()">Agregar</button>
            </div>
        </div>
    </div>
</div>

@* <!-- 🛒 Carrito -->
<div class="fixed-bottom bg-light p-3 border-top shadow d-flex justify-content-between align-items-center">
    <span id="resumenCarrito">Carrito vacío</span>
    <button class="btn btn-success" onclick="enviarPorWhatsApp()">Enviar pedido</button>
</div> *@
<div class="fixed-bottom bg-light p-3 border-top shadow d-flex justify-content-between align-items-center">
    <span id="resumenCarrito">Carrito vacío</span>
    <a id="btnFinalizarPedido" class="btn btn-success" href="/Pedido/Finalizar">Finalizar pedido</a>
</div>

@section Scripts {
    <script>
        let carrito = JSON.parse(localStorage.getItem('carrito')) || [];
        let productoActual = {};

            function abrirModal(nombre, precio, imagen, descuento = 0) {
            let precioConDescuento = descuento > 0 ? precio - (precio * descuento / 100) : precio;

            productoActual = { nombre, precio: precioConDescuento, imagen };

            document.getElementById('nombreProducto').innerText = nombre;
            document.getElementById('precioProducto').innerText = precioConDescuento.toFixed(2);
            document.getElementById('imagenProducto').src = imagen;
            document.getElementById('cantidadProducto').value = 1;
            document.getElementById('totalProducto').innerText = precioConDescuento.toFixed(2);

            let modal = new bootstrap.Modal(document.getElementById('modalCantidad'));
            modal.show();
        }

        function actualizarTotal() {
            let cantidad = parseInt(document.getElementById('cantidadProducto').value);
            let total = productoActual.precio * cantidad;
            document.getElementById('totalProducto').innerText = total.toFixed(2);
        }

               function agregarAlCarrito() {
            let cantidad = parseInt(document.getElementById('cantidadProducto').value);

            carrito.push({
                nombre: productoActual.nombre,
                precio: productoActual.precio,
                cantidad: cantidad
            });

            // Guardar carrito en localStorage para que se pueda recuperar en la página de finalizar pedido
            localStorage.setItem('carrito', JSON.stringify(carrito));

               actualizarBadgeCarrito();
            actualizarResumen();
            bootstrap.Modal.getInstance(document.getElementById('modalCantidad')).hide();
        }

           function actualizarBadgeCarrito() {
            // Recuperar carrito de localStorage
            let carrito = JSON.parse(localStorage.getItem('carrito')) || [];

            // Sumar todas las cantidades
            let totalCantidad = carrito.reduce((sum, producto) => sum + producto.cantidad, 0);

            // Actualizar el badge en el layout
            document.getElementById('carrito-cantidad').textContent = totalCantidad;
        }

        // function actualizarResumen() {
        //     if (carrito.length === 0) {
        //         document.getElementById('resumenCarrito').innerText = 'Carrito vacío';
        //         return;
        //     }

        //     let total = 0;
        //     carrito.forEach(p => total += p.precio * p.cantidad);

        //     document.getElementById('resumenCarrito').innerText =
        //         `🛒 ${carrito.length} productos - Total: $${total.toFixed(2)}`;
        // }

                function actualizarResumen() {
            const carrito = JSON.parse(localStorage.getItem('carrito')) || [];

            if (carrito.length === 0) {
                document.getElementById('resumenCarrito').innerText = 'Carrito vacío';
                return;
            }

            let total = 0;
            let totalItems = 0;

            carrito.forEach(p => {
                total += p.precio * p.cantidad;
                totalItems += p.cantidad;
            });

            document.getElementById('resumenCarrito').innerText =
                `🛒 ${totalItems} productos - Total: $${total.toFixed(2)}`;
        }

        //     function agregarAlCarrito() {
        // let cantidad = parseInt(document.getElementById('cantidadProducto').value);
        // let carrito = JSON.parse(localStorage.getItem('carrito')) || [];

        // // Verificar si el producto ya existe en el carrito
        // const productoExistente = carrito.find(p => p.nombre === productoActual.nombre);

        // if (productoExistente) {
        //     // Si ya existe, sumamos la cantidad
        //     productoExistente.cantidad += cantidad;
        // } else {
        //     // Si no existe, lo agregamos
        //     carrito.push({
        //         nombre: productoActual.nombre,
        //         precio: productoActual.precio,
        //         cantidad: cantidad
        //     });
        // }

        function enviarPorWhatsApp() {
            if (carrito.length === 0) {
                alert('El carrito está vacío');
                return;
            }

            let mensaje = "Hola! Quiero hacer el siguiente pedido:%0A";
            carrito.forEach(p => {
                mensaje += `- ${p.nombre} x${p.cantidad} ($${p.precio * p.cantidad})%0A`;
            });

            let total = carrito.reduce((acc, p) => acc + p.precio * p.cantidad, 0);
            mensaje += `%0ATotal: $${total.toFixed(2)}`;

            let numero = "5492991234567"; // ⚠️ Cambiar por el número del local
            window.open(`https://wa.me/${numero}?text=${mensaje}`, "_blank");
        }

                function cambiarCantidad(delta) {
            const input = document.getElementById('cantidadProducto');
            let cantidad = parseInt(input.value) || 1;
            cantidad += delta;
            if (cantidad < 1) cantidad = 1; // evita valores negativos
            input.value = cantidad;
            actualizarTotal();
        }
    </script>

    <script>
        let lastScrollTop = 0;
        const menuBar = document.querySelector('.menu-bar');

        window.addEventListener('scroll', function() {
            let scrollTop = window.pageYOffset || document.documentElement.scrollTop;

            if (scrollTop > lastScrollTop) {
                // Scroll hacia abajo → ocultar
                menuBar.style.top = "-60px"; // ajustá según altura de la barra
            } else {
                // Scroll hacia arriba → mostrar
                menuBar.style.top = "56px"; // debajo del navbar principal
            }

            lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
        });
    </script>
}